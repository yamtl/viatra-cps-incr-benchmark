plugins {
	id "org.xtext.xtend" version "2.0.7"
}

group 'arturboronat'
version '0.0.5-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'application'

mainClassName = mainClass
//mainClassName = "experiments.yamtl.Cps2DepRunner_ClientServer_YAMTL_modification"
//mainClassName = "experiments.yamtl.Cps2DepRunner_ClientServer_YAMTL_modification_full"
// mainClassName = "experiments.yamtl.Cps2DepRunner_PublishSubscribe_YAMTL_modification"
//mainClassName = "experiments.yamtl.Cps2DepRunner_PublishSubscribe_YAMTL_modification_full"
//mainClassName = "experiments.yamtl.Cps2DepRunner_LowSynch_YAMTL_modification"
//mainClassName = "experiments.yamtl.Cps2DepRunner_LowSynch_YAMTL_modification_full"
//mainClassName = "experiments.yamtl.Cps2DepRunner_SimpleScaling_YAMTL_modification"
//mainClassName = "experiments.yamtl.Cps2DepRunner_SimpleScaling_YAMTL_modification_full"
//mainClassName = "experiments.yamtl.Cps2DepRunner_Statistics_YAMTL_modification"
//mainClassName = "experiments.yamtl.Cps2DepRunner_Statistics_YAMTL_modification_full"

//mainClassName = "experiments.yamtl.Cps2DepRunner_ClientServer_YAMTL_optimized_modification"
//mainClassName = "experiments.yamtl.Cps2DepRunner_PublishSubscribe_YAMTL_optimized_modification"


applicationDefaultJvmArgs = ["-Xmx12288m"]



ext {
	xtendVersion = '2.18.0'
	aspectJVersion = '1.9.4'
}

eclipse {
	project {
	  name = 'm2m.incr.cps2dep.yamtl'
	  buildCommand 'org.eclipse.jdt.core.javabuilder'
	  buildCommand 'org.eclipse.ajdt.core.ajbuilder'
	  buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	  buildCommand 'org.eclipse.wst.common.project.facet.core.builder'

	  natures 'org.eclipse.jdt.core.javanature',
	  	  'org.eclipse.ajdt.ui.ajnature',
		  'org.eclipse.buildship.core.gradleprojectnature',
		  'org.eclipse.wst.common.project.facet.core.nature',
		  'org.eclipse.xtext.ui.shared.xtextNature',
		  'org.eclipse.pde.PluginNature'
	}
}


repositories {
	maven {
		url "https://github.com/yamtl/yamtl.github.io/raw/mvn-repo/mvn-repo/snapshot-repo"
	}
	//mavenLocal()
	mavenCentral()
}


// XTEND: configures output directories for generated java
xtend {
	sourceSets {
		main.xtendOutputDir = 'src/main/xtend-gen'
		test.xtendOutputDir = 'src/test/xtend-gen'
	}
}


sourceSets {
	main {
		java {
			srcDirs = [
				'src/main/java',
				'src/main/emf-gen',
				'src/main/xtend-gen'
			]
		}
		resources {
			srcDirs = ['src/main/resources']
		}
	}
	test {
		java {
			srcDirs = [
				'src/test/java',
				'src/test/xtend-gen'
			]
		}
	}
}


// ASPECTJ
configurations {
	ajc
	aspects 
	aspectCompile
	ajInpath
	compile {
		extendsFrom aspects
	}
}


compileJava {

  doLast{
	  ant.taskdef( resource:"org/aspectj/tools/ant/taskdefs/aspectjTaskdefs.properties", classpath: configurations.ajc.asPath )
	  ant.iajc(
		  source:"11",
		  target:"11",
		  destDir: sourceSets.main.output.classesDirs[0].absolutePath, 
		  inpath: configurations.ajInpath.asPath,
		  maxmem: "512m",
		  fork: "true",
		  aspectPath:configurations.aspects.asPath,
		  sourceRootCopyFilter:"**/.git/*,**/*.java",
		  classpath:"${configurations.compile.asPath};${configurations.aspectCompile.asPath}"){
		  sourceroots{
			  sourceSets.main.java.srcDirs.each{
				  pathelement(location:it.absolutePath)
			  }
		  }
	  }
  }
}

dependencies {
	// yamtl imported
	compile "yamtl:yamtl:${version}"
	compile files("lib/m2m.batch.base-0.0.1-20190830.094447-1.jar")
	
	compile "org.eclipse.xtend:org.eclipse.xtend.lib:$xtendVersion"
	compile "org.eclipse.xtext:org.eclipse.xtext.util:$xtendVersion"
	
	
	compile "com.google.guava:guava-testlib:24.1-jre"
	compile 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.15.0' 
	// for using @Accessors
	compile "org.eclipse.xtend:org.eclipse.xtend.lib.macro:$xtendVersion"
	compile 'org.eclipse.emf:org.eclipse.emf.ecore.change:2.11+'
	
	// AspectJ
	ajc "org.aspectj:aspectjtools:$aspectJVersion"
	compile("org.aspectj:aspectjrt:$aspectJVersion")
	compile("org.aspectj:aspectjweaver:$aspectJVersion")
	//aspects "yamtl:yamtl:${version}" -- do not use
	ajInpath "yamtl:yamtl:${version}"
	ajInpath 'org.eclipse.emf:org.eclipse.emf.ecore.xmi:2.15.0'
}



// create a single Jar with all dependencies
// source: https://www.mkyong.com/gradle/gradle-create-a-jar-file-with-dependencies/
task fatJar(type: Jar) {
	manifest {
		attributes 'LoadFmaModelAsXmi': 'Standalone FMA filter for EMF',
			'Implementation-Version': version,
			'Main-Class': mainClass
	}
	// remove signatures as we are not signing this jar to avoid security warnings
	exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
	baseName = project.name + '-all-' + mainClass 
	from { 
		configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } 
	} 
	with jar
}


